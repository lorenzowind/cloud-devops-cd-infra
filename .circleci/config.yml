version: 2.1

orbs:
  welcome: circleci/welcome-orb@0.4.1

jobs:
  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Ensure backend infrastructure exist
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name my-stack
  configure_infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["b4:f7:e6:2a:36:6d:4e:69:96:4b:8f:b5:43:51:a2:95"]
      - run:
          name: Install dependencies
          command: apk add --update ansible
      - run:
          name: Configure server
          command: ansible-playbook -i inventory main.yml
  smoke_test:
      docker:
        - image: alpine:latest
      steps:
        - run: apk add --update curl
        - run:
            name: smoke test.
            command: |
              URL="https://www.google.com"
              if curl -s --head ${URL}
              then
               return 0
              else
               return 1
              fi
  create_test_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Stack
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name prod-${CIRCLE_WORKFLOW_ID}
      - run: return 1
      - run:
          name: Destroy environment
          command: |
            aws cloudformation delete-stack --stack-name prod-${CIRCLE_WORKFLOW_ID}
          when: on_fail
  create_and_deploy_front_end:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: |
          aws cloudformation deploy \
            --template-file bucket.yml \
            --stack-name "${CIRCLE_WORKFLOW_ID}" \
            --parameter-overrides NAME="${CIRCLE_WORKFLOW_ID}"
      - run: aws s3 sync . s3://"${CIRCLE_WORKFLOW_ID}" --delete
  promote_to_production:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: |
          aws cloudformation deploy \
            --template-file cloudformation.yml \
            --stack-name cloudfront \
            --parameter-overrides PipelineID="${CIRCLE_WORKFLOW_ID}"
  clean_up_old_front_end:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: |
          aws s3 rm "s3://${OldPipelineID}" --recursive
          aws cloudformation delete-stack --stack-name "${PreviousPipelineID}"

workflows:
  welcome:
    jobs:
      - welcome/run
  # workflow:
  #   jobs:
  #     - create_infrastructure
  #     - configure_infrastructure
  #     - smoke_test
  #     - create_test_infrastructure
  #     - create_and_deploy_front_end
  #     - promote_to_production:
  #         requires: 
  #           - create_and_deploy_front_end
